package org.corp.sro.domain;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Procedimiento generated by hbm2java
 */
@Entity
@Table(name="procedimiento", catalog="sro")
public class Procedimiento  implements java.io.Serializable {


     private Integer idProcedimiento;
     private String cie;
     private String nombre;
     private String descripcion;
     private boolean eliminacion=true;
     private Set<Reserva> reservas = new HashSet<Reserva>(0);

    public Procedimiento() {
    }

	
    public Procedimiento(String cie, String nombre, boolean eliminacion) {
        this.cie = cie;
        this.nombre = nombre;
        this.eliminacion = eliminacion;
    }
    public Procedimiento(String cie, String nombre, String descripcion, boolean eliminacion, Set<Reserva> reservas) {
       this.cie = cie;
       this.nombre = nombre;
       this.descripcion = descripcion;
       this.eliminacion = eliminacion;
       this.reservas = reservas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idProcedimiento", unique=true, nullable=false)
    public Integer getIdProcedimiento() {
        return this.idProcedimiento;
    }
    
    public void setIdProcedimiento(Integer idProcedimiento) {
        this.idProcedimiento = idProcedimiento;
    }

    
    @Column(name="CIE", unique=true, length=30)
    public String getCie() {
        return this.cie;
    }
    
    public void setCie(String cie) {
        this.cie = cie;
    }

    
    @Column(name="Nombre", nullable=false, length=45)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    
    @Column(name="Descripcion", length=45)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    
    @Column(name="Eliminacion", nullable=false)
    public boolean isEliminacion() {
        return this.eliminacion;
    }
    
    public void setEliminacion(boolean eliminacion) {
        this.eliminacion = eliminacion;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="procedimiento")
    public Set<Reserva> getReservas() {
        return this.reservas;
    }
    
    public void setReservas(Set<Reserva> reservas) {
        this.reservas = reservas;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Procedimiento that = (Procedimiento) o;

        if (idProcedimiento != null ? !idProcedimiento.equals(that.idProcedimiento) : that.idProcedimiento != null) return false;

        return true;
    }
}


