package org.corp.sro.domain;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Sala generated by hbm2java
 */
@NamedNativeQueries({
	@NamedNativeQuery(
	name = "callActualizarEstadoSalas",
	query = "CALL sro.actualizarEstadoSalas(:fecha)",
	resultClass = Sala.class
	)
})
@Entity
@Table(name = "sala", catalog = "sro")
public class Sala implements java.io.Serializable {

	private Integer idSala;
	//private String estado;
	private String codSala;
	private String descripcion;
	private boolean eliminacion=true;
	private Set<Reserva> reservas = new HashSet<Reserva>(0);

	public Sala() {
	}
	
	public Sala(boolean eliminacion) {
		//this.estado = estado;
		this.eliminacion = eliminacion;
	}

	public Sala(boolean eliminacion, Set<Reserva> reservas) {
		//this.estado = estado;
		this.eliminacion = eliminacion;
		this.reservas = reservas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idSala", unique = true, nullable = false)
	public Integer getIdSala() {
		return this.idSala;
	}

	public void setIdSala(Integer idSala) {
		this.idSala = idSala;
	}
	
	@Column(name = "CodSala", nullable = false, length = 45)
	public String getCodSala() {
		return this.codSala;
	}

	public void setCodSala(String codSala) {
		this.codSala = codSala;
	}
	
	/*
	@Column(name = "Estado", nullable = false, length = 45)
	public String getEstado() {
		return this.estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}
	*/
	
	@Column(name = "Descripcion", nullable = false, length = 45)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "Eliminacion", nullable = false)
	public boolean isEliminacion() {
		return this.eliminacion;
	}

	public void setEliminacion(boolean eliminacion) {
		this.eliminacion = eliminacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sala")
	public Set<Reserva> getReservas() {
		return this.reservas;
	}

	public void setReservas(Set<Reserva> reservas) {
		this.reservas = reservas;
	}
	@Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Sala sala = (Sala) o;

        if (idSala != null ? !idSala.equals(sala.idSala) : sala.idSala != null) return false;

        return true;
    }
}
